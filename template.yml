# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Url Shoter

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
- AWS::Serverless-2016-10-31


Globals:
  Function:
    Runtime: nodejs12.x
    MemorySize: 128
    Timeout: 60
    Environment:
      Variables:
        Url_Table: !Ref UrlTable
  Api:
    Cors: 
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"
    # StageName: Prod
    # DefinitionBody:
    #   Fn::Transform:
    #     Name: AWS::Include
    #     Parameters:
    #       Location: s3://aws-sam-cli-managed-default-samclisourcebucket-hfecv3sejgsr/swagger.yaml


# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
  # ShotUrlApiGateway: 
  #   Type: AWS::Serverless::Api
  #   Properties:
  #     StageName: Prod
  #     DefinitionBody:
  #       Fn::Transform:
  #         Name: AWS::Include
  #         Parameters:
  #           Location: s3://aws-sam-cli-managed-default-samclisourcebucket-hfecv3sejgsr/swagger.yaml
  
  ToShotUrlLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/to-shot-url.toShotUrlLambdaHandler
      Description: transferm url to shot url
      Policies:
        # Give Create/Read/Update/Delete Permissions to the UrlTable
        - DynamoDBCrudPolicy:
            TableName: !Ref UrlTable
      Events:
        ToShotUrl:
          Type: Api
          Properties:
            Path: /
            Method: POST
            #RestApiId: !Ref ShotUrlApiGateway

  RedirectToUrlLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/redirect-to-url.redirectToUrlLambdaHandler
      Description: redirect to url by shot url
      Policies:
        # Give Create/Read/Update/Delete Permissions to the UrlTable
        - DynamoDBCrudPolicy:
            TableName: !Ref UrlTable
      Events:
        RedirectToUrlApi:
          Type: Api
          Properties:
            Path: /{id}
            Method: GET
            #RestApiId: !Ref ShotUrlApiGateway

# DynamoDB table to store item: {id: &lt;ID&gt;, name: &lt;NAME&gt;}
  UrlTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: shotId
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 10
        WriteCapacityUnits: 10

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"